{"result": {"body": "<p>InnoDB is a great storage engine for MySQL offering, among other things,\ntransaction support. One of its drawbacks is the difficulty that you can face\nwhen corruption inevitably hits.</p>\n<p>At work we have dealt with corrupt InnoDB tables often enough to make the\nprocedure fairly routine. Last week I was faced with a situation that had me\npulling my hair out; in fact we almost threw in the towel.</p>\n<p>In this particular instance I was connecting to the database with the standard\ncommand line client <code>mysql</code>. Every time I ran any query (against the corrupt\ntable or not) I was slapped in the face with the annoying \"MySQL Server Has\nGone Away\" message. Even queries like <code>SHOW PROCESSLIST;</code> would trigger the\nproblem.</p>\n<p>Right before we gave up I had an idea. When you start the client it gives you\nthe following message:</p>\n<pre><code>Reading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n</code></pre>\n<p>What this means is that the client looks up meta information about the tables\nand columns in your selected database so that when you hit <kbd>TAB</kbd> it\nwill auto fill the table names like you would get on the command line. The list\nof tables and columns is rebuilt any time you change databases or issue the\n<code>REHASH;</code> command.</p>\n<p>On a hunch I tried starting the client with the <span class=\"code\">-A</span>\nflag to prevent this table scanning. I don't know the technical reason within\nMySQL's binaries but with this option enabled my problem went away. I can only\nassume that when the client scans the tables (including the corrupt table)\nsomething goes horribly wrong.</p>\n<p>So just file that away in your DBA utility belt :)</p>", "title": "A Note on Recovering from InnoDB Corruption", "tags": ["language:mysql", "tool:innodb"], "summary": "Corrupt InnoDB tables are difficult to repair. I discovered a tip that might help when dealing with a misbehaving server.", "date": "2013-06-27", "_id": "a-note-on-recovering-from-innodb-corruption"}}