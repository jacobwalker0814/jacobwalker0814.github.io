<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jcbwlkr</title>
    <link>https://jacob-walker.com/</link>
    <description>Recent content on jcbwlkr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Sep 2016 22:26:33 -0500</lastBuildDate>
    
	<atom:link href="https://jacob-walker.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>devICT</title>
      <link>https://jacob-walker.com/portfolio/devict.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/devict.html</guid>
      <description>&lt;p&gt;devICT is the largest software development community in Wichita boasting over
500 registered members. Since joining in 2012 I have taken on the
responsibility of being the director. The group covers all aspects of software
development. Our mission is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To educate, empower, and connect software developers in the Wichita area.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ardan Labs</title>
      <link>https://jacob-walker.com/portfolio/ardan-labs.html</link>
      <pubDate>Mon, 19 Sep 2016 22:26:33 -0500</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/ardan-labs.html</guid>
      <description>&lt;p&gt;My full time engagement is with the very talented team at &lt;a href=&#34;https://www.ardanlabs.com/&#34;&gt;Ardan Labs&lt;/a&gt;.
We specialize in the Go programming language and offer training and consulting
services.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Wrecking Ball Media</title>
      <link>https://jacob-walker.com/portfolio/wrecking-ball-media.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/wrecking-ball-media.html</guid>
      <description>&lt;p&gt;From February 2015 to February 2016 I was a contracting engineer at &lt;a href=&#34;http://wreckingballmedia.com/&#34;&gt;Wrecking
Ball Media Group&lt;/a&gt;. As a part of this team I worked on a web based
community platform for &lt;a href=&#34;http://www.adobe.com/&#34;&gt;Adobe&lt;/a&gt;. The project utilized several different
APIs from Adobe and other vendors to create a white labeled site for connecting
and empowering creative youth.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started With Go</title>
      <link>https://jacob-walker.com/portfolio/getting-started-with-go.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/getting-started-with-go.html</guid>
      <description>&lt;p&gt;This is a talk I presented at the first &lt;a href=&#34;http://lanyrd.com/2015/klf15/&#34;&gt;Kansas Linux Fest&lt;/a&gt; in March 2015.
I gave it again that month at my company&amp;rsquo;s internal roundtable and again for
&lt;a href=&#34;https://jacob-walker.com/portfolio/devict.html&#34;&gt;devICT&lt;/a&gt; that July.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cqlstore</title>
      <link>https://jacob-walker.com/portfolio/cqlstore.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/cqlstore.html</guid>
      <description>&lt;p&gt;In Go web development the &lt;a href=&#34;http://www.gorillatoolkit.org/&#34;&gt;Gorilla web toolkit&lt;/a&gt; is a very popular
collection of libraries for common web tasks. The &lt;code&gt;gorilla/sessions&lt;/code&gt; package
provides an easy interface for using/storing users&amp;rsquo; session data. There was no
implementation for &lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra DB&lt;/a&gt; so I created one.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>httpmatchers</title>
      <link>https://jacob-walker.com/portfolio/httpmatchers.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/httpmatchers.html</guid>
      <description>&lt;p&gt;BDD in Go is made easier using the &lt;a href=&#34;http://onsi.github.io/ginkgo/&#34;&gt;Ginkgo&lt;/a&gt; and &lt;a href=&#34;http://onsi.github.io/gomega/&#34;&gt;Gomega&lt;/a&gt;
packages. Gomega specifically provides a collection of matchers for asserting
that results match expectations. When using these tools to test an API I was
developing I noticed some common patterns appearing around the assertion of
HTTP status codes. I created the &lt;code&gt;github.com/jcbwlkr/httpmatchers&lt;/code&gt; package to
simplify some of those patterns.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TimeIPS</title>
      <link>https://jacob-walker.com/portfolio/timeips.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/timeips.html</guid>
      <description>&lt;p&gt;From October 2010 to February 2015 the majority of my development focus was
with my employer TimeIPS. We made a time and attendance system which is used by
thousands of companies around the world.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pysag</title>
      <link>https://jacob-walker.com/portfolio/pysag.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/pysag.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jcbwlkr/pysag&#34;&gt;pysag&lt;/a&gt; is a tool I developed for generating static web apps. It differs
from other (great) static site generators like Jekyll by being focused on data
first and pages second.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Regular Expressions 101</title>
      <link>https://jacob-walker.com/portfolio/regex-101.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/regex-101.html</guid>
      <description>&lt;p&gt;In March 2013 I gave a presentation to my local development group
&lt;a href=&#34;https://jacob-walker.com/portfolio/devict.html&#34;&gt;devICT&lt;/a&gt; over the different forms and uses of Regular Expressions. The
talk was just under two hours long and was well received by the audience
(approximately 25 developers). The presentation was broadcast through Google
Hangouts On Air and the video is available on &lt;a href=&#34;http://youtu.be/4LnyHF8dnIk&#34;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing OOP</title>
      <link>https://jacob-walker.com/portfolio/implementing-oop.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/implementing-oop.html</guid>
      <description>&lt;p&gt;Back in June 2014 I gave a presentation to &lt;a href=&#34;https://jacob-walker.com/portfolio/devict.html&#34;&gt;devICT&lt;/a&gt; about how to use
Object Oriented Programming in PHP and Ruby. I chose this topic when I was
explaining inheritance to a friend and realized others would be interested. I
chose PHP and Ruby for examples because I was already familiar with OOP in PHP
and I wanted to learn more about Ruby&amp;rsquo;s object model.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Templating In PHP With Twig</title>
      <link>https://jacob-walker.com/portfolio/twig.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/twig.html</guid>
      <description>&lt;p&gt;In November 2013 I gave a short presentation to &lt;a href=&#34;https://jacob-walker.com/portfolio/devict.html&#34;&gt;devICT&lt;/a&gt; about the PHP
templating engine &lt;a href=&#34;http://twig.sensiolabs.org&#34;&gt;Twig&lt;/a&gt;. The talk covered the basics of
installing/configuring Twig, rendering templates, and writing templates.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Startup Wichita</title>
      <link>https://jacob-walker.com/portfolio/startup-wichita.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/startup-wichita.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://startupwichita.com&#34;&gt;Startup Wichita&lt;/a&gt; was a grass roots effort to connect entrepreneurs in
Wichita with local people and resources. In March 2014 &lt;a href=&#34;https://jacob-walker.com/portfolio/devict.html&#34;&gt;devICT&lt;/a&gt; held a
hackathon to kick-start development on the community site.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>find.torrent</title>
      <link>https://jacob-walker.com/portfolio/find.torrent.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/find.torrent.html</guid>
      <description>At home my desktop PC acts as a UPNP media server and is the box I use to download torrents. This machine was inconveniently located in my basement. There were many times when I would want to start a download but the only device nearby is my phone. I found that finding and downloading a torrent file then getting it to my torrent machine was a cumbersome process. Furthermore, many sites that index torrent files contain advertising that ranges from annoying to inappropriate to explicit.</description>
    </item>
    
    <item>
      <title>LiveJournal Amnesia</title>
      <link>https://jacob-walker.com/portfolio/livejournal-amnesia.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/livejournal-amnesia.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jcbwlkr/livejournal-amnesia&#34;&gt;LiveJournal Amnesia&lt;/a&gt; is a quick script I wrote to automate the
process of hiding the 200-some LiveJournal blog posts I generated in my late
teens. It uses a public gem to talk to the LiveJournal API. Check out &lt;a href=&#34;https://github.com/jcbwlkr/livejournal-amnesia&#34;&gt;the
README on GitHub&lt;/a&gt; for more info then you, too, can pretend like
you never wrote that poem Junior year!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Geocommunicator API Client</title>
      <link>https://jacob-walker.com/portfolio/geocommunicator.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/geocommunicator.html</guid>
      <description>&lt;p&gt;I have a friend who travels around the country servicing natural gas pipelines.
As part of his duties he has to translate latitude / longitude coordinates into
state, township, range, and section information. He was doing this by hand
dozens of time per day. I found an API from the &lt;a href=&#34;http://www.geocommunicator.gov/&#34;&gt;Department of the Interior&amp;rsquo;s
Bureau of Land Management&lt;/a&gt; which accepts coordinates and responds with the
exact information my friend needed.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Natural Organic Warehouse</title>
      <link>https://jacob-walker.com/portfolio/now.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/now.html</guid>
      <description>&lt;p&gt;Natural Organic Warehouse (NOW) is a distributor of organic products for
farming, gardening, and landscaping purposes. Their slogan is &amp;ldquo;better, cleaner,
sustainable choices.&amp;rdquo; Through my consulting company &lt;a href=&#34;http://tortugas-llc.com&#34;&gt;Tortugas Consulting,
LLC&lt;/a&gt; I helped to develop their online presence.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Norris Training Systems</title>
      <link>https://jacob-walker.com/portfolio/norris-training.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/norris-training.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://norristraining.com&#34;&gt;Norris Training Systems&lt;/a&gt; provides pre-licensing and continuing
education training to insurance agents. My consulting company &lt;a href=&#34;http://tortugas-llc.com&#34;&gt;Tortugas
Consulting, LLC&lt;/a&gt; developed their e-commerce website which allows
agents to purchase and schedule classes. Additionally agents can download
documents associated with their course and take related quizzes to prepare for
their state license exam.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Young Life Wichita</title>
      <link>https://jacob-walker.com/portfolio/young-life-wichita.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/young-life-wichita.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://myylwichita.com&#34;&gt;Young Life Wichita&lt;/a&gt; (YLW) is a local chapter of the larger Young Life
organization. YLW supports local families through various charitable events and
activities. My consulting company was hired to develop an online application
where people could RSVP for different activities.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yagl-js</title>
      <link>https://jacob-walker.com/portfolio/yagl.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/yagl.html</guid>
      <description>&lt;p&gt;When I first read about &lt;a href=&#34;http://en.wikipedia.org/wiki/Conway_game&#34;&gt;Conway&amp;rsquo;s Game of Life&lt;/a&gt; I was intrigued. As an
experiment I set out to see if I could implement the game in only HTML5,
Canvas, CSS and pure JavaScript. The game works in both desktop and mobile
browsers.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My Dotfiles</title>
      <link>https://jacob-walker.com/portfolio/dotfiles.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/dotfiles.html</guid>
      <description>&lt;p&gt;It seems like every *nix developer hosts at least their bashrc file on GitHub
and I am no exception. My repo uses the Ruby gem &lt;a href=&#34;https://github.com/technicalpickles/homesick&#34;&gt;homesick&lt;/a&gt; to easily
keep my config files in sync.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vim Contributions</title>
      <link>https://jacob-walker.com/portfolio/vim.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/portfolio/vim.html</guid>
      <description>&lt;p&gt;When I started using Vim as my primary editor I found my second love. Its pure
efficiency combined with its extendability have yet to leave me seriously
wanting for any features. I have made some contributions back to the vim
ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Concurrency Trap #2: Incomplete Work</title>
      <link>https://jacob-walker.com/blog/2019/04/concurrency-trap-2-incomplete-work.html</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/blog/2019/04/concurrency-trap-2-incomplete-work.html</guid>
      <description>This post was originally published on the Ardan Labs Blog.
Introduction In my first post on Goroutine Leaks, I mentioned that concurrency is a useful tool but it comes with certain traps that don&amp;rsquo;t exist in synchronous programs. To continue with this theme, I will introduce a new trap called incomplete work. Incomplete work occurs when a program terminates before outstanding Goroutines (non-main goroutines) complete. Depending on the nature of the Goroutine that is being terminated forcefully, this may be a serious problem.</description>
    </item>
    
    <item>
      <title>Goroutine Leaks - The Abandoned Receivers</title>
      <link>https://jacob-walker.com/blog/goroutine-leaks-the-abandoned-receivers.html</link>
      <pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/blog/goroutine-leaks-the-abandoned-receivers.html</guid>
      <description>This post was originally published on the Ardan Labs Blog.
Introduction Goroutine Leaks are a common cause of memory leaks in Go programs. In my previous post, I presented an introduction to Goroutine leaks and provided one example of a common mistake that many Go developers make. Continuing that work, this post presents another scenario on how Goroutines could be leaked.
Leak: The Abandoned Receivers For this leak example you will see multiple Goroutines blocked waiting to receive values that will never be sent.</description>
    </item>
    
    <item>
      <title>Goroutine Leaks - The Forgotten Sender</title>
      <link>https://jacob-walker.com/blog/goroutine-leaks-the-forgotten-sender.html</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/blog/goroutine-leaks-the-forgotten-sender.html</guid>
      <description>This post was originally published on the Ardan Labs Blog.
Introduction Concurrent programming allows developers to solve problems using more than one path of execution and is often used in an attempt to improve performance. Concurrency doesn’t mean these multiple paths are executing in parallel; it means these paths are executing out-of-order instead of sequentially. Historically, this type of programming is facilitated using libraries that are either provided by a standard library or from 3rd party developers.</description>
    </item>
    
    <item>
      <title>Taming tmux: Find One Process Among Many Windows</title>
      <link>https://jacob-walker.com/blog/taming-tmux-find-one-process-among-many-windows.html</link>
      <pubDate>Tue, 04 Oct 2016 14:27:34 -0500</pubDate>
      
      <guid>https://jacob-walker.com/blog/taming-tmux-find-one-process-among-many-windows.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a big fan of &lt;a href=&#34;https://tmux.github.io/&#34;&gt;tmux&lt;/a&gt; and I use it daily. Over time I will open more
and more windows and my workspace starts to get a bit cluttered. Occasionally I
will try to open some file in vim that is already open in another window. I
used to dread playing &amp;ldquo;find the right window,&amp;rdquo; especially if I had backgrounded
vim. This happened often enough that I spent the time to make a little tmux
keybinding for finding that window automatically.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Note on Recovering from InnoDB Corruption</title>
      <link>https://jacob-walker.com/blog/a-note-on-recovering-from-innodb-corruption.html</link>
      <pubDate>Thu, 27 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jacob-walker.com/blog/a-note-on-recovering-from-innodb-corruption.html</guid>
      <description>&lt;p&gt;InnoDB is a great storage engine for MySQL offering, among other things,
transaction support. One of its drawbacks is the difficulty that you can face
when corruption inevitably hits.&lt;/p&gt;

&lt;p&gt;At work we have dealt with corrupt InnoDB tables often enough to make the
procedure fairly routine. Last week I was faced with a situation that had me
pulling my hair out; in fact we almost threw in the towel.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP Clone and Shallow vs Deep Copying</title>
      <link>https://jacob-walker.com/blog/php-clone-and-shallow-vs-deep-copying.html</link>
      <pubDate>Sun, 06 Jan 2013 00:00:00 -0600</pubDate>
      
      <guid>https://jacob-walker.com/blog/php-clone-and-shallow-vs-deep-copying.html</guid>
      <description>&lt;p&gt;Looking through the &lt;a href=&#34;https://github.com/PHPOffice/PHPExcel&#34;&gt;PHPExcel&lt;/a&gt; library
recently I saw how Mark Baker overrides the magic &lt;code&gt;__clone&lt;/code&gt; method with
comments about ensuring that cloning will perform a deep copy instead of a
shallow one. This is a topic with which I had not had much experience so I did
some research and experimenting to learn what happens when you use &lt;code&gt;clone&lt;/code&gt; and
the difference between a shallow copy and a deep copy.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>